@page "/"
@using OverviewAzureAiAgentService.WebApp.Models
@using OverviewAzureAiAgentService.WebApp.Services
@inject AppService AppService

<PageTitle>Chat</PageTitle>

<h3>Chat</h3>

<div class="chat-container">
    @foreach (var message in Messages)
    {
        <div class="message @(string.Compare(message.Role, "User", StringComparison.InvariantCultureIgnoreCase) == 0 ? "User" : "Assistant")">
            @message.Content
        </div>
    }
</div>

<div class="input-container">
    <input @bind="UserInput" @bind:event="oninput" placeholder="Type your message..." />
    <button @onclick="SendMessage">Send</button>
</div>

@code {
    private Agent _agent = null!;
    private Thread _thread = null!;
    private string UserInput { get; set; } = string.Empty;
    private List<Message> Messages { get; set; } = [];
    
    protected override async Task OnInitializedAsync()
    {
        // Create the assistant
        var createAgentRequest = new CreateAgentRequest
        {
            Name = "Assistant",
            Instructions = "Provide helpful responses to user queries."
        };
        
        _agent = await AppService.CreateAgentAsync(createAgentRequest);
        
        _thread = await AppService.CreateThreadAsync();
        
        // Optionally, initialize the Messages list with a welcome message
        Messages.Add(new Message
        {
            Content = "Hello! How can I assist you today?",
            Role = "Assistant"
        });
    }

    private async Task SendMessage()
    {
        if (string.IsNullOrWhiteSpace(UserInput))
            return;

        // Add user message
        var userMessage = new Message { Content = UserInput, Role = "User" };
        Messages.Add(userMessage);

        // Clear input
        var input = UserInput;
        UserInput = string.Empty;

        // Call API and add response
        var response = await AppService.CreateRunAsync(new CreateRunRequest()
        {
            ThreadId = _thread.Id,
            AgentId = _agent.Id,
            Message = input
        });
        
        Messages.Add(response);
    }
}